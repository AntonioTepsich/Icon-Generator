import { type NextPage } from "next";
import Head from "next/head";
import { Input } from "../component/input";
import { FormGroup } from "~/component/FormGroup";
import { useState } from "react";
import { api } from "~/utils/api";
import { Button } from "~/component/Button";
import Image from "next/image";

const colors = [
    'blue',
    'red',
    'green',
    'yellow',
    'white',
    'black',
    'orange',
]

const GeneratePage: NextPage = () => {


    const [form, setForm] = useState({
        prompt: "",
        color: "",
    });

    const [imageUrl, setImageUrl] = useState("");

    const generateIcon = api.generate.generateIcon.useMutation({
        onSuccess(data) {
            if(!data.imageUrl) return;
            setImageUrl(data.imageUrl);
        }
    });
    function handleFormSubmit(e: React.FormEvent){
        e.preventDefault();
        generateIcon.mutate(form);
        // setForm((prev)=>({...prev, prompt: ""}));
    }

    function updateForm( key: string){
        return function(e: React.ChangeEvent<HTMLInputElement>){
            setForm(prev => ({
                ...prev, 
                [key]: e.target.value
            }))
        }
    }

    return (
        <>
            <Head>
                <title>Generate Icons</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="container px-8 mx-auto mt-24 flex min-h-screen flex-col gap-4">
                <h1 className="text-6xl">Generate your icons</h1>
                <p className=" text-2xl mb-12">Fill out form below to start generating your icons</p>
                <form className="flex flex-col gap-4"
                    onSubmit={handleFormSubmit} >

                    <h2>1. Describe what you want your icon to look like</h2>
                    <FormGroup className="mb-12"> 
                        <label>Prompt</label>
                        <Input value={form.prompt} onChange={updateForm("prompt")} />
                    </FormGroup>

                    <h2>2. Pick your icon color.</h2>
                    <FormGroup className="grid grid-cols-4 mb-12"> 
                        {colors.map(color => (
                            <label key={color} className="flex gap-2 text-2xl">
                                <input type="radio" name="color" checked={color === form.color} onChange={()=>setForm((prev)=>({...prev, color}))}></input>
                                {color}
                            </label>    
                        ))}
                    </FormGroup>
                    
                    <Button isLoading={generateIcon.isLoading} disabled={generateIcon.isLoading}>Submit</Button>
                </form>
                {imageUrl && (
                    <>
                        <h2 className="text-xl">Your Icons</h2>
                        <section className="grid grid-cols-4 gap-4 mb-12">
                            <Image 
                                src={imageUrl} 
                                alt="an image of your generated prompt" 
                                width={100} 
                                height={100} 
                                className="w-full"
                            />
                        </section>

                    </>
                )}
            </main>
        </>
    );
};

export default GeneratePage;
